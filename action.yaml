name: 'GTA'
description: 'Finds Go packages that have deviated from their upstream source.'

inputs:
  repo_path:
    description: 'Path to the repo to check diff of'
    required: true
  base:
    description: 'Base branch to diff against'
    required: false
    default: 'origin/master'
  include:
    description: 'Define changes to be filtered with a set of comma-separated prefixes'
    required: false
    default: ''
  merge:
    description: 'Diff using the latest merge commit'
    required: false
    default: false
  json:
    description: 'Output list of changes as JSON'
    required: false
    default: false
  buildable_only:
    description: 'Keep buildable changed packages only'
    required: false
    default: true
  changed_files:
    description: 'Path to a file containing a newline-separated list of files that have changed'
    required: false
    default: ''
  tags:
    description: 'A list of build tags to consider'
    required: false
    default: ''

outputs:
  changed_packages:
    description: 'A newline-delimited list of packages that have deviated from the given base'
    value: ${{ steps.gta.outputs.changed_packages }}

runs:
  using: "composite"
  steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install Go package
      shell: bash
      # todo nickyd: update to current stable version tag
      run: go install github.com/digitalocean/gta/cmd/gta@latest

    - name: Run GTA
      shell: bash
      id: gta
      run: |
        cd "${{ inputs.repo_path }}"

        pwd

        flags=""

        if [[ -n "${{ inputs.base }}" ]]; then
          flags="${flags} -base ${{ inputs.base }}"
        fi

        if [[ -n "${{ inputs.include }}" ]]; then
          flags="${flags} -include ${{ inputs.include }}"
        fi

        if [[ -n "${{ inputs.merge }}" ]]; then
          flags="${flags} -merge ${{ inputs.merge }}"
        fi

        if [[ -n "${{ inputs.json }}" ]]; then
          flags="${flags} -json ${{ inputs.json }}"
        fi

        if [[ -n "${{ inputs.buildable_only }}" ]]; then
          flags="${flags} -buildable-only ${{ inputs.buildable_only }}"
        fi

        if [[ -n "${{ inputs.changed_files }}" ]]; then
          flags="${flags} -changed-files ${{ inputs.changed_files }}"
        fi

        if [[ -n "${{ inputs.tags }}" ]]; then
          flags="${flags} -tags ${{ inputs.tags }}"
        fi

        changed_packages=$(gta $flags)

        echo "changed packages:"
        echo "${changed_packages}"
        echo "changed_packages=${changed_packages}" >> $GITHUB_OUTPUT

branding:
  icon: 'package'
  color: 'blue'
